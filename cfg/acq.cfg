// config file for nuphase-acq
// not all options are changeable by restart

// settings related to threshold  / trigger control 
// These all can be set without restarting

control: 
{
  // scaler goals for each beam, desired rate ( in Hz) 
  scaler_goals = { 0  : 1., 1  : 1., 2  : 1., 3  : 1., 
                   4  : 1., 5  : 1., 6  : 1., 7  : 1., 
                   8  : 1., 9  : 1., 10 : 1., 11 : 1., 
                   12 : 1., 13 : 1., 14 : 1., }; 

  //the beams allowed to participate in the trigger
  trigger_mask = 0xe; 

  // the channels on the master allowed to participate in the trigger
  channel_mask = 0xf; 

  // pid loop proportional term 
  k_p = 10; 

  // pid loop integral term 
  k_i = 0.1; 

  // pid loop differential term 
  k_d = 0.0; 

  //monitoring interval, for PID loop (in seconds) 
  monitor_interval = 1; 

  // software trigger interval (in seconds) 
  sw_trigger_interval = 1; 

  //enable the phased trigger
  enable_phased_trigger = 1; 

  //delay for phased trigger to start
  secs_before_phased_trigger = 10; 

  //weight of fast scaler in pid loop 
  fast_scaler_weight = 0.1; 

  //weight of slow scaler in pid loop 
  slow_scaler_weight = 0.9; 

}; 

// settings related to the acquisition
// Not all of these can be set without restarting
device: 
{
  //spi devices, master first, requires restart to change
  spi_devices = ("/dev/spidev2.0", "/dev/spidev1.0") ; 

  // circular buffer capacity. In-memory storage in between acquisition and writing. Requires restart. 
  buffer_capacity = 100; 

  //the length of a waveform, in samples. 
  waveform_length = 624; 

  //the pretrigger window length, in hardware units
  pretrigger = 4; 

  //calpulser state, 0 (off) , 2 (baseline)  or 3 (calpulser) 
  calpulser = 0; 

  //spi clock speed, MHz
  spi_clock = 20; 
 
  // attenuation, per channel
  attenuation = ( {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0}, {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0} );  

  //which channels to digitize
  channel_read_mask = (0xf, 0x7) ; 
};


//settings related to output
output: 
{
// Run file, used to persist run number
  run_file = "/data/runfile"; 

  // output directory, data will go here
  output_directory = "/data" ;

  //print to screen interval 
  print_interval = 1; 

  // run length, in seconds
  run_length = 3600; 

  //events per output file
  events_per_file = 1000; 

  //statuses per output file
  status_per_file = 200; 
};



